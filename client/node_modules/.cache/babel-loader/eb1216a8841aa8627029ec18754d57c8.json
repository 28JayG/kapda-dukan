{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport { userActionTypes } from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOutStart() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOutStart);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/jayg/Documents/MyCode/Code/Web/kapda-dukan/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","userActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","googleProvider","auth","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","signInAfterSignUp","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","signOutStart","signOut","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\n\nimport { userActionTypes } from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from \"./user.actions\";\n\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOutStart() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOutStart);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}